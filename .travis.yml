dist: trusty

sudo: required

addon_shortcuts:
  clang39: &clang39
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - clang-3.9
        - g++-4.8-aarch64-linux-gnu
        - gcc-4.8-aarch64-linux-gnu
        - g++-4.8-multilib
        - gcc-4.8-multilib
        - qemu
        - qemu-system-arm

addons:
  apt:
    update: true
    packages:
      - cmake

matrix:
  include:
     - { env: 'CXX=clang++-3.9 CROSS_COMPILE=1 ARM_ARCH_DIR=aarch64-linux-gnu GCC_VER=4.8.4 ARM_SETTINGS="armv8-a -target aarch64-linux-gnueabi"', addons: *clang39 }

env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
before_install:
    - curl -L http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - echo 'deb http://llvm.org/apt/trusty/ llvm-toolchain-trusty-3.8 main' | sudo tee /etc/apt/sources.list

install:
    - cd tests/build/cmake
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Useful for debugging any issues with conda
    - conda info -a
    - conda install gtest cmake -c conda-forge
    - if [[ "$ENABLE_XTL_COMPLEX" == 1 ]] ; then
        conda install xtl -c quantstack ;
      fi
    - mkdir $HOME/linker_bin ;
    - ln -s /usr/bin/aarch64-linux-gnu-ld $HOME/linker_bin/ld ;
    - echo "SETTING GNU LINKER DIR" ;
    - ls -al $HOME/linker_bin/ld ;
    - cmake . -DBUILD_TESTS=ON -DCROSS_COMPILE_ARM=ON -DDOWNLOAD_GTEST=ON -DARM_ARCH_DIRECTORY="$ARM_ARCH_DIR" -DARM_GCC_VER="$GCC_VER" -DTARGET_ARCH="$ARM_SETTINGS --prefix=$HOME/linker_bin/" ;
    - make -j2 jsoncons_tests

script:
    - qemu-aarch64 -L /usr/aarch64-linux-gnu/ ./jsoncons_tests ;

